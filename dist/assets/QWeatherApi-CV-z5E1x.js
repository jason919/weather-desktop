var l=Object.defineProperty;var u=(s,e,t)=>e in s?l(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var o=(s,e,t)=>(u(s,typeof e!="symbol"?e+"":e,t),t);import{b as d,L as c}from"./GeoApi-BUuivxZ1.js";const a=d.create({});a.interceptors.response.use(s=>{if(s.status==200){const e=s.data.code;let t="未知错误";return e!=200?(e==204?t="请求成功，但你查询的地区暂时没有你需要的数据。":e==400?t="请求错误，可能包含错误的请求参数或缺少必选的请求参数。":e==401?t="认证失败，可能使用了错误的KEY、数字签名错误、KEY的类型错误":e==402?t="超过访问次数或余额不足以支持继续访问服务":e==403?t="无访问权限，可能是绑定的PackageName、BundleID、域名IP地址不一致":e==404?t="查询的数据或地区不存在":e==429?t="超过限定的QPM（每分钟访问次数）":e==500&&(t="无响应或超时，接口服务异常请联系和风天气"),Promise.reject(new n(t,e))):Promise.resolve(s.data)}else return Promise.reject(new n("未知错误","未知错误"))},s=>Promise.reject(s));class n extends Error{constructor(t,r){super(t);o(this,"code");this.code=r}}class w{static async now(e,t,r=c){return await a.get(`https://devapi.qweather.com/v7/weather/now?location=${e}&key=${t}&lang=${r}`)}static async indices(e,t,r=1,i=c){return await a.get(`https://devapi.qweather.com/v7/indices/${r}d?location=${e}&key=${t}&lang=${i}`)}}export{w as Q};
